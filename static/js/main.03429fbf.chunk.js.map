{"version":3,"sources":["actions/products.js","actions/actionTypes.js","components/Navbar.js","reducers/products.js","components/Notifications.js","components/CartItemList.js","components/AddProduct.js","components/App.js","reducers/index.js","index.js","store/index.js"],"names":["fetchProducts","dispatch","fetch","then","response","json","data","console","log","products","type","increaseProduct","product","decreaseProduct","deleteProduct","showAddProduct","val","isVisibleAddProduct","appendProduct","hideAddProduct","addtoCart","removefromCart","addtoEditable","removefromEditable","showCartItem","isCartProducts","hideCartItem","changeEditInline","index","Navbar","handleAddProduct","props","handleShowCartItem","handleHideCartItem","handleSortByPrice","this","cart","className","onClick","style","marginLeft","src","alt","length","React","Component","initialProductState","list","editable","compare","p1","p2","price","toast","configure","notify","msg","success","notifyw","warning","CartItemList","increaseQuantity","count","decreaseQuantity","removeProduct","handleAddtoCart","handleRemovefromCart","isAddedtoCart","indexOf","handleAddtoEditable","handleRemovefromEditable","isAddedtoEditable","handleChange","fieldName","submitEditChange","displayProducts","map","key","Style","image","imgUrl","defaultValue","name","onChange","e","target","value","fontSize","display","description","color","height","width","borderRadius","background","AddProduct","handleaddProduct","preventDefault","document","getElementById","handleCloseDialogueBox","id","placeholder","App","connect","state","combineReducers","action","splice","cartIndex","Cindex","pop","sortedList","sort","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.03429fbf.chunk.js","sourcesContent":["import {\r\n  UPDATE_PRODUCTS,\r\n  INCREMENT_PRODUCT,\r\n  DECREMENT_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  SHOW_ADD_PRODCUT,\r\n  APPEND_PRODUCT,\r\n  HIDE_ADD_PRODUCT,\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  SHOW_CART_ITEMS,\r\n  HIDE_CART_ITEMS,\r\n  EDIT_CHANGE_INLINE,\r\n  REMOVE_FROM_EDITABLE,\r\n  ADD_TO_EDITABLE,\r\n  SORT_BY_PRICE,\r\n} from \"./actionTypes\";\r\nimport { findByDisplayValue } from \"@testing-library/react\";\r\nexport function fetchProducts() {\r\n  return (dispatch) => {\r\n    const url =\r\n      \"https://my-json-server.typicode.com/AtulRaj151/ecommerce-data/db\";\r\n    fetch(url)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(\"data in fetch \", data.products);\r\n        dispatch(updateProducts(data.products));\r\n      });\r\n  };\r\n}\r\nexport function updateProducts(products) {\r\n  return {\r\n    type: UPDATE_PRODUCTS,\r\n    products,\r\n  };\r\n}\r\nexport function increaseProduct(product) {\r\n  return {\r\n    type: INCREMENT_PRODUCT,\r\n    product,\r\n  };\r\n}\r\nexport function decreaseProduct(product) {\r\n  return {\r\n    type: DECREMENT_PRODUCT,\r\n    product,\r\n  };\r\n}\r\n\r\nexport function deleteProduct(product) {\r\n  return {\r\n    type: DELETE_PRODUCT,\r\n    product,\r\n  };\r\n}\r\nexport function showAddProduct(val) {\r\n  return {\r\n    type: SHOW_ADD_PRODCUT,\r\n    isVisibleAddProduct: val,\r\n  };\r\n}\r\nexport function appendProduct(product) {\r\n  return {\r\n    type: APPEND_PRODUCT,\r\n    product,\r\n  };\r\n}\r\n\r\nexport function hideAddProduct(val) {\r\n  return {\r\n    type: HIDE_ADD_PRODUCT,\r\n    isVisibleAddProduct: val,\r\n  };\r\n}\r\nexport function addtoCart(product) {\r\n  return {\r\n    type: ADD_TO_CART,\r\n    product,\r\n  };\r\n}\r\nexport function removefromCart(product) {\r\n  return {\r\n    type: REMOVE_FROM_CART,\r\n    product,\r\n  };\r\n}\r\n\r\n//editable\r\nexport function addtoEditable(product) {\r\n  return {\r\n    type: ADD_TO_EDITABLE,\r\n    product,\r\n  };\r\n}\r\nexport function removefromEditable(product) {\r\n  return {\r\n    type: REMOVE_FROM_EDITABLE,\r\n    product,\r\n  };\r\n}\r\n\r\nexport function showCartItem(val) {\r\n  return {\r\n    type: SHOW_CART_ITEMS,\r\n    isCartProducts: val,\r\n  };\r\n}\r\nexport function hideCartItem(val) {\r\n  return {\r\n    type: HIDE_CART_ITEMS,\r\n    isCartProducts: val,\r\n  };\r\n}\r\nexport function editChange(product) {\r\n  return {\r\n    type: EDIT_CHANGE_INLINE,\r\n    product,\r\n  };\r\n}\r\n\r\nexport function changeEditInline(product, index) {\r\n  return {\r\n    type: \"CHANGE_EDIT_INLINE\",\r\n    product,\r\n    index,\r\n  };\r\n}\r\nexport function sortByPrice() {\r\n  return {\r\n    type: SORT_BY_PRICE,\r\n  };\r\n}\r\n// export function changeText(inline) {\r\n//   {\r\n//     return {\r\n//       type: CHANGE,\r\n//       inline,\r\n//     };\r\n//   }\r\n// }\r\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const INCREMENT_PRODUCT = \"INCREMENT_PRODUCT\";\r\nexport const DECREMENT_PRODUCT = \"INCREMENT_PRODUCT\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const SHOW_ADD_PRODCUT = \"SHOW_ADD_PRODCUT\";\r\nexport const APPEND_PRODUCT = \"APPEND_PRODUCT\";\r\nexport const HIDE_ADD_PRODUCT = \"HIDE_ADD_PRODUCT\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const SHOW_CART_ITEMS = \"SHOW_CART_ITEMS\";\r\nexport const HIDE_CART_ITEMS = \"HIDE_CART_ITEMS\";\r\nexport const EDIT_CHANGE_INLINE = \"EDIT_CHANGE_INLINE\";\r\nexport const REMOVE_FROM_EDITABLE = \"REMOVE_FROM_EDITABLE\";\r\nexport const ADD_TO_EDITABLE = \"ADD_TO_EDITABLE\";\r\nexport const SORT_BY_PRICE = \"SORT_BY_PRICE\";\r\n","import React from \"react\";\r\nimport {\r\n  showAddProduct,\r\n  showCartItem,\r\n  hideCartItem,\r\n  sortByPrice,\r\n} from \"../actions/products\";\r\n\r\nclass Navbar extends React.Component {\r\n  // navbar items to show add products in navbar\r\n  handleAddProduct = (val) => {\r\n    this.props.dispatch(showAddProduct(val));\r\n  };\r\n  // function to show cart item page in navbar\r\n  handleShowCartItem = (val) => {\r\n    this.props.dispatch(showCartItem(val));\r\n  };\r\n  // hide the cart item\r\n  handleHideCartItem = (val) => {\r\n    this.props.dispatch(hideCartItem(val));\r\n  };\r\n  //sort the products\r\n  handleSortByPrice = () => {\r\n    this.props.dispatch(sortByPrice());\r\n  };\r\n  render() {\r\n    const { cart, isCartProducts } = this.props.products;\r\n    return (\r\n      <div className=\"nav\">\r\n        <div\r\n          onClick={() => this.handleHideCartItem(false)}\r\n          className={`all-products ${isCartProducts ? \" \" : \"active\"}`}\r\n        >\r\n          Products\r\n        </div>\r\n        <div\r\n          onClick={() => this.handleAddProduct(true)}\r\n          className=\"cart-add-products\"\r\n        >\r\n          Add Products\r\n        </div>\r\n        <div\r\n          onClick={() => this.handleShowCartItem(true)}\r\n          className=\"cartIconContainer\"\r\n        >\r\n          <button\r\n            style={{ marginLeft: \"-26vw\" }}\r\n            onClick={() => this.handleSortByPrice()}\r\n          >\r\n            SORT BY PRICE\r\n          </button>\r\n          <img\r\n            className=\"cartIcon\"\r\n            src=\"https://image.flaticon.com/icons/svg/630/630746.svg\"\r\n            alt=\"carticon\"\r\n          />\r\n          <span className=\"cartCount\">{cart.length}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import {\r\n  UPDATE_PRODUCTS,\r\n  INCREMENT_PRODUCT,\r\n  DECREMENT_PRODUCT,\r\n  DELETE_PRODUCT,\r\n  SHOW_ADD_PRODCUT,\r\n  APPEND_PRODUCT,\r\n  HIDE_ADD_PRODUCT,\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  SHOW_CART_ITEMS,\r\n  HIDE_CART_ITEMS,\r\n  EDIT_CHANGE_INLINE,\r\n  ADD_TO_EDITABLE,\r\n  REMOVE_FROM_EDITABLE,\r\n  SORT_BY_PRICE,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialProductState = {\r\n  list: [],\r\n  cart: [],\r\n  editable: [],\r\n  isVisibleAddProduct: false,\r\n  isCartProducts: false,\r\n  // inline: \"hello\",\r\n};\r\n\r\nexport default function products(state = initialProductState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        list: action.products,\r\n      };\r\n    case INCREMENT_PRODUCT:\r\n      return {\r\n        ...state,\r\n      };\r\n    case DECREMENT_PRODUCT:\r\n      return {\r\n        ...state,\r\n      };\r\n    case DELETE_PRODUCT:\r\n      let list = state.list;\r\n      let index = list.indexOf(action.product);\r\n\r\n      if (index > -1) {\r\n        list.splice(index, 1);\r\n        state.editable.splice(index, 1);\r\n      }\r\n      return {\r\n        ...state,\r\n        list: list,\r\n      };\r\n    case SHOW_ADD_PRODCUT:\r\n      return {\r\n        ...state,\r\n        isVisibleAddProduct: action.isVisibleAddProduct,\r\n      };\r\n    case APPEND_PRODUCT:\r\n      return {\r\n        ...state,\r\n        list: [...state.list, action.product],\r\n      };\r\n    case HIDE_ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        isVisibleAddProduct: action.isVisibleAddProduct,\r\n      };\r\n    case ADD_TO_CART:\r\n      let cartIndex = state.cart.indexOf(action.product);\r\n      if (cartIndex === -1) {\r\n        return {\r\n          ...state,\r\n          cart: [...state.cart, action.product],\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n\r\n    case REMOVE_FROM_CART:\r\n      let cart = state.cart;\r\n      let Cindex = cart.indexOf(action.product);\r\n\r\n      if (Cindex > -1) {\r\n        cart.splice(Cindex, 1);\r\n      }\r\n      return {\r\n        ...state,\r\n        cart: cart,\r\n      };\r\n    case SHOW_CART_ITEMS:\r\n      return {\r\n        ...state,\r\n        isCartProducts: action.isCartProducts,\r\n      };\r\n    case HIDE_CART_ITEMS:\r\n      return {\r\n        ...state,\r\n        isCartProducts: action.isCartProducts,\r\n      };\r\n    case ADD_TO_EDITABLE:\r\n      return {\r\n        ...state,\r\n        editable: [...state.editable, action.product],\r\n      };\r\n    case REMOVE_FROM_EDITABLE:\r\n      return {\r\n        ...state,\r\n        editable: [],\r\n      };\r\n    case \"CHANGE_EDIT_INLINE\":\r\n      state.list.splice(action.index, 1);\r\n      state.editable.pop();\r\n      state.list.splice(action.index, 0, action.product);\r\n      return {\r\n        ...state,\r\n      };\r\n    case SORT_BY_PRICE: {\r\n      let sortedList = state.list;\r\n      sortedList.sort(compare);\r\n      return {\r\n        ...state,\r\n        list: sortedList,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction compare(p1, p2) {\r\n  return p1.price - p2.price;\r\n}\r\n","import { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure();\r\n\r\n//success\r\nconst notify = (msg) => {\r\n  toast.success(msg);\r\n};\r\n\r\n//warning\r\nconst notifyw = (msg) => {\r\n  toast.warning(msg);\r\n};\r\nexport { notify, notifyw };\r\n","import React, { Component } from \"react\";\r\nimport InlineEdit from \"react-edit-inline2\";\r\nimport {\r\n  increaseProduct,\r\n  decreaseProduct,\r\n  deleteProduct,\r\n  addtoCart,\r\n  removefromCart,\r\n  addtoEditable,\r\n  removefromEditable,\r\n  changeEditInline,\r\n} from \"../actions/products\";\r\nimport products from \"../reducers/products\";\r\nimport { notify, notifyw } from \"./Notifications\";\r\n\r\nclass CartItemList extends Component {\r\n  //increase the cart items\r\n  increaseQuantity = (product) => {\r\n    product.count = product.count + 1;\r\n    this.props.dispatch(increaseProduct(product));\r\n  };\r\n  //decrease the cart items\r\n  decreaseQuantity = (product) => {\r\n    if (product.count == 0) {\r\n      return;\r\n    }\r\n    product.count = product.count - 1;\r\n    this.props.dispatch(decreaseProduct(product));\r\n  };\r\n  // removes the products from the products list\r\n  removeProduct = (product) => {\r\n    this.props.dispatch(deleteProduct(product));\r\n    notifyw(\"Product removed\");\r\n  };\r\n  // add the product to cart array\r\n  handleAddtoCart = (product) => {\r\n    this.props.dispatch(addtoCart(product));\r\n    notify(\"Added to Cart\");\r\n  };\r\n\r\n  // removes the products from cart array on toggle\r\n  handleRemovefromCart = (product) => {\r\n    this.props.dispatch(removefromCart(product));\r\n    notifyw(\"Removed from Cart\");\r\n  };\r\n  // this function checks if product is added in cart array and returns true for toggling the button of cart\r\n  isAddedtoCart = (product) => {\r\n    const { cart } = this.props.products;\r\n\r\n    let index = cart.indexOf(product);\r\n    if (index == -1) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // this function is for adding editable inline link when we click on edit\r\n  handleAddtoEditable = (product) => {\r\n    this.props.dispatch(addtoEditable(product));\r\n  };\r\n  // this removes the product from editable\r\n  handleRemovefromEditable = (product) => {\r\n    this.props.dispatch(removefromEditable(product));\r\n  };\r\n\r\n  // it checks wheatcher there is product in editable list[] : if present return true and change the value\r\n  isAddedtoEditable = (product) => {\r\n    const { editable } = this.props.products;\r\n\r\n    let index = editable.indexOf(product);\r\n    if (index == -1) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // this is used to change the product when we edit inline\r\n  handleChange = (fieldName, val, product) => {\r\n    product[fieldName] = val;\r\n  };\r\n\r\n  //on submit the inline changed product it removes from editable and to list of new products\r\n  submitEditChange = (product, index) => {\r\n    this.props.dispatch(changeEditInline(product, index));\r\n    notify(\"Edited Inline\");\r\n  };\r\n\r\n  render() {\r\n    const { products } = this.props;\r\n    const { list, isCartProducts, cart } = products;\r\n    // isCartProducts is true the display products would be cart items else products\r\n    const displayProducts = isCartProducts ? cart : list;\r\n    console.log(\"Products lists\", products);\r\n\r\n    return (\r\n      <div className=\"product-lists\">\r\n        {/* if isCartProducts is true then it shows the Cart Item heading */}\r\n        {isCartProducts ? <h1>Cart Items</h1> : null}\r\n        {/* map all the products in cart item */}\r\n        {displayProducts.map((product, index) => (\r\n          <div className=\"cart-item\" key={index}>\r\n            <div className=\"left-block\">\r\n              <img style={Style.image} src={product.imgUrl} />\r\n            </div>\r\n            <div className=\"right-block\">\r\n              {/* checks if product is added to editable list accordingly edit options are avaialble */}\r\n              {this.isAddedtoEditable(product) ? (\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue={product.name}\r\n                  onChange={(e) =>\r\n                    this.handleChange(\"name\", e.target.value, product)\r\n                  }\r\n                />\r\n              ) : (\r\n                <div style={{ fontSize: 25 }}>{product.name}</div>\r\n              )}\r\n              {this.isAddedtoEditable(product) ? (\r\n                <input\r\n                  className=\"cart-item-desc\"\r\n                  style={{ display: \"block\" }}\r\n                  type=\"textarea\"\r\n                  defaultValue={product.description}\r\n                  onChange={(e) =>\r\n                    this.handleChange(\"description\", e.target.value, product)\r\n                  }\r\n                />\r\n              ) : (\r\n                <div className=\"cart-item-desc\">{product.description}</div>\r\n              )}\r\n\r\n              {this.isAddedtoEditable(product) ? (\r\n                <input\r\n                  type=\"number\"\r\n                  defaultValue={product.price}\r\n                  onChange={(e) =>\r\n                    this.handleChange(\"price\", e.target.value, product)\r\n                  }\r\n                />\r\n              ) : (\r\n                <div style={{ color: \"#777\" }}>Rs. {product.price}</div>\r\n              )}\r\n\r\n              <div className=\"btn-grp\">\r\n                {/* buttons for save the editable inline */}\r\n                {this.isAddedtoEditable(product) && (\r\n                  <button\r\n                    onClick={() => {\r\n                      this.submitEditChange(product, index);\r\n                    }}\r\n                    className=\"button save-btn\"\r\n                  >\r\n                    Save\r\n                  </button>\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ color: \"#777\" }}>Qty: {product.count}</div>\r\n              <div className=\"cart-item-actions\">\r\n                <img\r\n                  alt=\"increase\"\r\n                  className=\"action-icons\"\r\n                  src=\"https://image.flaticon.com/icons/svg/929/929409.svg\"\r\n                  onClick={() => this.increaseQuantity(product)}\r\n                />\r\n                <img\r\n                  alt=\"decrease\"\r\n                  className=\"action-icons\"\r\n                  src=\"https://image.flaticon.com/icons/svg/148/148765.svg\"\r\n                  onClick={() => this.decreaseQuantity(product)}\r\n                />\r\n                <img\r\n                  alt=\"delete\"\r\n                  className=\"action-icons\"\r\n                  src=\"https://image.flaticon.com/icons/svg/1632/1632602.svg\"\r\n                  onClick={() => this.removeProduct(product)}\r\n                />\r\n                <img\r\n                  alt=\"edit\"\r\n                  className=\"action-icons\"\r\n                  src=\"https://image.flaticon.com/icons/svg/603/603519.svg\"\r\n                  onClick={() => this.handleAddtoEditable(product)}\r\n                />\r\n                {this.isAddedtoCart(product) ? (\r\n                  <img\r\n                    alt=\"add-to-cart\"\r\n                    className=\"action-icons added-cart\"\r\n                    src=\"https://image.flaticon.com/icons/svg/126/126515.svg\"\r\n                    onClick={() => this.handleRemovefromCart(product)}\r\n                  />\r\n                ) : (\r\n                  <img\r\n                    alt=\"add-to-cart\"\r\n                    className=\"action-icons\"\r\n                    src=\"https://image.flaticon.com/icons/svg/70/70021.svg\"\r\n                    onClick={() => this.handleAddtoCart(product)}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Style = {\r\n  image: {\r\n    height: 150,\r\n    width: 140,\r\n    borderRadius: 4,\r\n    background: \"#ccc\",\r\n  },\r\n};\r\n\r\nexport default CartItemList;\r\n","import React, { Component } from \"react\";\r\nimport { appendProduct, hideAddProduct } from \"../actions/products\";\r\nimport { notify } from \"./Notifications\";\r\n\r\nclass AddProduct extends Component {\r\n  //add prodcut functions\r\n  handleaddProduct = (e) => {\r\n    e.preventDefault();\r\n\r\n    //fetching the value from  input forms\r\n    let name = document.getElementById(\"name\").value;\r\n    let imgUrl = document.getElementById(\"image\").value;\r\n    let description = document.getElementById(\"description\").value;\r\n    let price = document.getElementById(\"price\").value;\r\n    let product = {\r\n      count: 0,\r\n      description,\r\n      imgUrl,\r\n      name,\r\n      price,\r\n    };\r\n    //sending to action createrrs\r\n    this.props.dispatch(appendProduct(product));\r\n    this.props.dispatch(hideAddProduct(false));\r\n    notify(\"Added Products\");\r\n  };\r\n\r\n  //function to close the add product dialgue box\r\n  handleCloseDialogueBox = (val) => {\r\n    this.props.dispatch(hideAddProduct(val));\r\n  };\r\n  //render the components\r\n  render() {\r\n    return (\r\n      <div className=\"add-product-container\">\r\n        <p>ADD PRODUCT</p>\r\n        <div\r\n          onClick={() => this.handleCloseDialogueBox(false)}\r\n          className=\"add-product-close\"\r\n        >\r\n          <img src=\"https://image.flaticon.com/icons/svg/753/753345.svg\" />\r\n        </div>\r\n        <form className=\"add-product-form\">\r\n          <label className=\"add-product-label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"add-product-input\"\r\n            name=\"name\"\r\n            placeholder=\"Name of the Product..\"\r\n          />\r\n          <label className=\"add-product-label\">Image</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"add-product-input\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            placeholder=\"Images address.\"\r\n          />\r\n          <label className=\"add-product-label\">Description</label>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"add-product-input\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"Description..\"\r\n          />\r\n          <label className=\"add-product-label\">Price</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"add-product-input\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            placeholder=\"Price in Rs..\"\r\n          />\r\n          <button\r\n            onClick={this.handleaddProduct}\r\n            className=\"add-product-btn\"\r\n            value=\"submit\"\r\n          >\r\n            Add Product\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProduct;\r\n","import React, { Component } from \"react\";\nimport { Navbar } from \"./index\";\nimport { connect } from \"react-redux\";\nimport { fetchProducts } from \"../actions/products\";\nimport CartItemList from \"./CartItemList\";\nimport AddProduct from \"./AddProduct\";\nimport { prettyDOM } from \"@testing-library/react\";\n\nclass App extends Component {\n  //fetch api here\n  componentDidMount() {\n    this.props.dispatch(fetchProducts());\n  }\n\n  //render the components\n  render() {\n    console.log(\"Props\", this.props);\n    const { products, dispatch, isVisibleAddProduct } = this.props;\n\n    return (\n      <div>\n        <Navbar dispatch={dispatch} products={products} />\n        {products.isVisibleAddProduct ? (\n          <AddProduct dispatch={dispatch} />\n        ) : null}\n        <CartItemList products={products} dispatch={dispatch} />\n      </div>\n    );\n  }\n}\n\n// passing callback function state as props\nfunction mapStateToProps(state) {\n  return {\n    products: state.products,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\n\r\nimport products from \"./products\";\r\nexport default combineReducers({\r\n  products,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { configureStore } from \"./store\";\n\nconst store = configureStore();\nconsole.log(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport reducer from \"../reducers\";\r\n\r\nlet store;\r\n\r\nexport function configureStore() {\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n  return store;\r\n}\r\n"],"sourceRoot":""}